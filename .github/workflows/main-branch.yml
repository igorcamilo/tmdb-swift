name: "Main branch"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  analyze:
    concurrency:
      group: MainBranch-${{ matrix.name }}-${{ github.ref }}
      cancel-in-progress: true
    name: Analyze code (${{ matrix.name }})
    runs-on: macos-15
    permissions:
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        include:
        - destination: name=Workflow
          name: iOS
          sim-device-type: iPhone-16
          sim-runtime: iOS-18-5
        - destination: platform=macOS
          name: macOS
        - destination: name=Workflow
          name: tvOS
          sim-device-type: Apple-TV-4K-3rd-generation
          sim-runtime: tvOS-18-5
        - destination: name=Workflow
          name: watchOS
          sim-device-type: Apple-Watch-Series-10-42mm
          sim-runtime: watchOS-11-5
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: swift
        build-mode: manual
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_16.4.app
    - name: Create and boot simulator (if needed)
      if: ${{ matrix.sim-device-type != null && matrix.sim-runtime != null }}
      run: xcrun simctl create Workflow com.apple.CoreSimulator.SimDeviceType.${{ matrix.sim-device-type }} com.apple.CoreSimulator.SimRuntime.${{ matrix.sim-runtime }} && xcrun simctl boot Workflow
    - name: Build and run tests
      run: xcrun xcodebuild clean test -scheme TMDB  -resultBundlePath TestResults -destination "${{ matrix.destination }}" CODE_SIGNING_ALLOWED="NO"
    - name: Perform CodeQL analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:swift"
    - name: Upload xcresult bundle
      uses: actions/upload-artifact@v4
      with:
        name: TestResults-${{ matrix.name }}.xcresult
        path: TestResults.xcresult
